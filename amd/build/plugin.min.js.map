{"version":3,"file":"plugin.min.js","sources":["../src/plugin.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny formatting for Moodle\n *\n * @module     tiny_formatting/plugin\n * @copyright  2024 Andrew Lyons <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {\n    addToolbarButtons,\n    addToolbarSection,\n} from 'editor_tiny/utils';\nimport {pluginName} from './common';\n\n// Setup the tiny_formatting Plugin.\nconst configureMenu = (menu) => {\n    if (menu.format.items.match(/\\bblocks\\b/)) {\n        menu.format.items = menu.format.items.replace(\n            /(\\bblocks\\b)/,\n            ' styles $1 fontfamily fontsize',\n        );\n    } else {\n        menu.format.items = `${menu.format.items} | fontfamily fontsize`;\n    }\n\n    if (menu.format.items.match(/\\blanguage\\b/)) {\n        menu.format.items = menu.format.items.replace(\n            /(\\blanguage\\b)/,\n            ' forecolor backcolor | $1',\n        );\n    } else {\n        menu.format.items = `${menu.format.items} | forecolor backcolor`;\n    }\n\n    return menu;\n};\n\nconst configureToolbar = (toolbar) => {\n    // Insert fontfamily, font size, forecolor, backcolor at the start of the bottom row.\n    toolbar = addToolbarSection(toolbar, 'font', 'alignment', false);\n    toolbar = addToolbarButtons(toolbar, 'font', ['fontfamily', 'fontsize', 'forecolor', 'backcolor']);\n\n    // Remove LTR / LTR buttons located in the directionality section.\n    toolbar = toolbar.filter((section) => section.name !== 'directionality');\n\n    return toolbar;\n};\n\n// eslint-disable-next-line no-async-promise-executor\nexport default new Promise(async (resolve) => {\n    resolve([`${pluginName}/plugin`, {\n        configure: (instanceConfig) => ({\n            menu: configureMenu(instanceConfig.menu),\n            toolbar: configureToolbar(instanceConfig.toolbar),\n            // Remove the blockquote.\n            quickbars_selection_toolbar: instanceConfig.quickbars_selection_toolbar.replace('blockquote', ''),\n        }),\n    }]);\n});\n"],"names":["Promise","async","resolve","pluginName","configure","instanceConfig","menu","format","items","match","replace","toolbar","filter","section","name","quickbars_selection_toolbar"],"mappings":"2MAgEe,IAAIA,SAAQC,MAAAA,UACvBC,QAAQ,WAAIC,8BAAqB,CAC7BC,UAAYC,wBACRC,MArCWA,KAqCSD,eAAeC,KApCvCA,KAAKC,OAAOC,MAAMC,MAAM,cACxBH,KAAKC,OAAOC,MAAQF,KAAKC,OAAOC,MAAME,QAClC,eACA,kCAGJJ,KAAKC,OAAOC,gBAAWF,KAAKC,OAAOC,gCAGnCF,KAAKC,OAAOC,MAAMC,MAAM,gBACxBH,KAAKC,OAAOC,MAAQF,KAAKC,OAAOC,MAAME,QAClC,iBACA,6BAGJJ,KAAKC,OAAOC,gBAAWF,KAAKC,OAAOC,gCAGhCF,MAmBCK,SAhBcA,QAgBYN,eAAeM,QAdjDA,SAAU,4BAAkBA,QAAS,OAAQ,aAAa,GAI1DA,SAHAA,SAAU,4BAAkBA,QAAS,OAAQ,CAAC,aAAc,WAAY,YAAa,eAGnEC,QAAQC,SAA6B,mBAAjBA,QAAQC,QAYtCC,4BAA6BV,eAAeU,4BAA4BL,QAAQ,aAAc,KAlBhFC,IAAAA,QAtBHL"}